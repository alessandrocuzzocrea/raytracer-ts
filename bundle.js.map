{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/color.ts","webpack:///./src/vec3.ts","webpack:///./src/consts.ts","webpack:///./src/abstractray.ts","webpack:///./src/main.ts","webpack:///./src/raytracer.ts","webpack:///./src/viewport.ts","webpack:///./src/cameraray.ts","webpack:///./src/illuminationray.ts","webpack:///./src/scene.ts","webpack:///./src/sphere.ts","webpack:///./src/hitinfo.ts","webpack:///./src/light.ts","webpack:///./src/ui.ts","webpack:///./src/controller.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","g","b","this","Red","Color","Black","MidnightBlue","Magenta","White","Yellow","Green","x","y","z","Zero","Vec3","Forward","Length","a","Math","pow","sqrt","Normalized","length","Add","v","Subtract","ScalarMultiply","k","Dot","WIDTH","HEIGHT","DEBUG_NORMALS","Consts","origin","direction","hitInfo","Array","CalcPointAtT","AddHit","push","sort","GetNearerHit","AbstractRay","ui","UI","raytracer","Raytracer","controller","Controller","Clear","Render","width","height","viewport","Viewport","scene","Scene","FillRandom","Height","Width","color","GetRay","Shoot","DrawPixel","GetBuffer","buffer","Uint8ClampedArray","Ratio","clearColor","random","dirX","dirY","CameraRay","offset","Objects","intersect","hit","SpawnChildIlluminationRay","Light","intensity","illuminationRay","localColor","GetColor","light","HitPoint","pointToLight","position","IlluminationRay","parentRay","max","normal","objects","Sphere","radius","ray","x_o","y_o","z_o","x_d","y_d","z_d","x_c","y_c","z_c","A","B","C","discriminant","t_0","HitInfo","E","x_i","y_i","z_i","hitPoint","div","document","createElement","body","append","canvas","appendChild","context","getContext","clearButton","innerText","fillRandomButton","renderButton","saveToPNGButton","SetClearButtonOnClick","fn","onclick","SetFillRandomButtonOnClick","SetRenderButtonOnClick","SetSaveToPNGButtonOnClick","DrawCanvas","putImageData","ImageData","SaveToPNG","window","open","innerHTML","toDataURL"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","export class Color {\n    r: number;\n    g: number;\n    b: number;\n\n    constructor(r:number, g:number, b:number) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n\n    public static Red(): Color {\n        return new Color(231, 76, 60);\n    }\n\n    public static Black(): Color {\n        return new Color(0, 0, 0);\n    }\n\n    public static MidnightBlue(): Color {\n        return new Color(44, 62, 80);\n    }\n\n    public static Magenta(): Color {\n        return new Color(155, 89, 182);\n    }\n\n    public static White(): Color {\n        return new Color(255, 255, 255);\n    }\n\n    public static Yellow(): Color {\n        return new Color(241, 196, 15);\n    }\n\n    public static Green(): Color {\n        return new Color(46, 204, 113)\n    }\n}\n","export class Vec3 {\n    x: number;\n    y: number;\n    z: number;\n\n    constructor(x: number, y: number, z:number) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    public static Zero(): Vec3 {\n        return new Vec3(0, 0, 0);\n    }\n\n    public static Forward(): Vec3 {\n        return new Vec3(0, 0, 1);\n    }\n\n    public Length(): number {\n        let a = Math.pow(this.x, 2);\n        let b = Math.pow(this.y, 2);\n        let c = Math.pow(this.z, 2);\n        return Math.sqrt(a + b + c);\n    }\n\n    public Normalized(): Vec3 {\n        let length = this.Length();\n        return new Vec3(\n            this.x / length,\n            this.y / length,\n            this.z / length\n        );\n    }\n\n    public Add(v: Vec3): Vec3 {\n        return new Vec3(\n            this.x + v.x,\n            this.y + v.y,\n            this.z + v.z\n        );\n    }\n\n    public Subtract(v: Vec3): Vec3 {\n        return new Vec3(\n            this.x - v.x,\n            this.y - v.y,\n            this.z - v.z\n        );\n    }\n\n    public ScalarMultiply(k: number): Vec3 {\n        return new Vec3(\n            this.x * k,\n            this.y * k,\n            this.z * k,\n        );\n    }\n\n    public Dot(v: Vec3): number {\n        return this.x * v.x + this.y * v.y + this.z * v.z;\n    }\n}\n","export class Consts {\n    public static readonly WIDTH         = 640;\n    public static readonly HEIGHT        = 480;\n    public static readonly DEBUG_NORMALS = false;\n}\n","import { Vec3 } from \"./vec3\";\nimport { HitInfo } from './hitinfo';\nimport { Scene } from \"./scene\";\nimport { Color } from \"./color\";\nimport { IlluminationRay } from \"./illuminationray\";\nimport { Light } from \"./light\";\n\nexport abstract class AbstractRay {\n    origin : Vec3;\n    direction : Vec3;\n    public hitInfo : Array<HitInfo>;\n    // public childRays: Array<AbstractRay>;\n    public parentRay : AbstractRay;\n    public illuminationRay : IlluminationRay;\n\n    constructor(origin: Vec3, direction: Vec3) {\n        this.origin = origin;\n        this.direction = direction.Normalized();\n        this.hitInfo = new Array<HitInfo>();\n\n        // this.childRays = new Array<AbstractRay>();\n    }\n\n    public CalcPointAtT(t: number): Vec3 {\n        return this.origin.Add(this.direction.ScalarMultiply(t));\n    }\n\n    public AddHit(hitInfo: HitInfo) {\n        this.hitInfo.push(hitInfo);\n        this.hitInfo.sort((a, b) => {  //TODO: float comparison\n            if (a.t > b.t) return 1;\n            if (a.t < b.t) return -1;\n            return 0;\n        });\n    }\n\n    public GetNearerHit() {\n        if (this.hitInfo.length == 0) return null;\n        return this.hitInfo[0];\n    }\n\n    //TODO: find a better name for this method\n    abstract Shoot(scene: Scene): Color;\n}\n","import { Consts } from './consts';\nimport { Raytracer } from './raytracer';\nimport { UI } from './ui';\nimport { Controller } from './controller';\n\nlet ui = new UI(Consts.WIDTH, Consts.HEIGHT);\nlet raytracer = new Raytracer(Consts.WIDTH, Consts.HEIGHT);\nlet controller = new Controller(ui, raytracer);\n\ncontroller.Clear();\ncontroller.Render();\n","import { Viewport } from './viewport'\nimport { Scene } from './scene';\nimport { CameraRay } from './cameraray';\nimport { Color } from './color';\n\nexport class Raytracer {\n    private viewport: Viewport;\n    private scene: Scene;\n\n    constructor(width: number, height: number) {\n        this.viewport = new Viewport(width, height);\n        this.scene = new Scene();\n    }\n\n    Clear() {\n        this.viewport.Clear();\n    }\n\n    FillRandom() {\n        this.viewport.FillRandom();\n    }\n\n    Render() {\n        for (var y: number = 0; y < this.viewport.Height(); y++) {\n            for (var x: number = 0; x < this.viewport.Width(); x++) {\n                let ray: CameraRay = this.viewport.GetRay(x, y);\n                let color: Color = ray.Shoot(this.scene);\n                if (color) {\n                    this.viewport.DrawPixel(x, y, color);\n                }\n            }\n        }\n    }\n\n    GetBuffer(): Uint8ClampedArray {\n        return this.viewport.GetBuffer();\n    }\n}\n","import { Vec3 } from \"./vec3\";\nimport { Color } from \"./color\";\nimport { CameraRay } from \"./cameraray\";\n\nexport class Viewport {\n    private width: number\n    private height: number\n    private buffer: Uint8ClampedArray\n\n    constructor(width: number, height: number) {\n        this.width = width;\n        this.height = height;\n        this.buffer = new Uint8ClampedArray(width * height * 4);\n\n        this.Clear();\n    }\n\n    GetBuffer() {\n        return this.buffer;\n    }\n\n    Width(): number {\n        return this.width;\n    }\n\n    Height(): number {\n        return this.height;\n    }\n\n    Ratio(): number {\n        return this.width / this.height;\n    }\n\n    Clear() {\n        let clearColor = Color.Magenta();\n        for(var i = 0; i < this.width * this.height * 4;) {\n            this.buffer[i+0] = clearColor.r;\n            this.buffer[i+1] = clearColor.g;\n            this.buffer[i+2] = clearColor.b;\n            this.buffer[i+3] = 255;\n            i += 4;\n        }\n    }\n\n    FillRandom() {\n        for(var i = 0; i < this.width * this.height * 4;) {\n            this.buffer[i+0] = Math.random() * 255;\n            this.buffer[i+1] = Math.random() * 255;\n            this.buffer[i+2] = Math.random() * 255;\n            this.buffer[i+3] = 255;\n            i += 4;\n        }\n    }\n\n    GetRay(x: number, y: number): CameraRay {\n        //TODO: cast the ray from the center for the pixel\n        let dirX: number = (this.Ratio() / this.width) * x - this.Ratio()/2;\n        let dirY: number = 1/2 - (1 / this.height) * y;\n        return new CameraRay(new Vec3(0,0,0), new Vec3(dirX, dirY, 1));\n    }\n\n    DrawPixel(x: number, y: number, color: Color) {\n        let offset = this.width * y + x;\n        this.buffer[offset * 4 + 0] = color.r;\n        this.buffer[offset * 4 + 1] = color.g;\n        this.buffer[offset * 4 + 2] = color.b;\n        this.buffer[offset * 4 + 3] = 255;\n    }\n}\n","import { Scene } from \"./scene\";\nimport { Color } from \"./color\";\nimport { AbstractRay } from \"./abstractray\";\nimport { IlluminationRay } from \"./illuminationray\";\nimport { Light } from \"./light\";\n\nexport class CameraRay extends AbstractRay {\n\n    public Shoot(scene: Scene): Color {\n        let color: Color = null;\n        for (let i = 0; i < scene.Objects().length; i++) {\n            const object    = scene.Objects()[i];\n            let hitInfo     = object.intersect(this);\n            if (hitInfo.hit) this.AddHit(hitInfo);\n        }\n\n        let hitInfo = this.GetNearerHit();\n        if (hitInfo) {\n            this.SpawnChildIlluminationRay(scene.Light());\n            let intensity = this.illuminationRay.Shoot(scene/*, object*/);\n\n            let localColor: Color = hitInfo.GetColor();\n            color = new Color(localColor.r * intensity.r, localColor.g * intensity.g, localColor.b * intensity.b);\n        }\n        return color;\n    }\n\n    public SpawnChildIlluminationRay(light: Light) {\n        const origin = this.GetNearerHit().HitPoint();\n        const pointToLight = light.position.Subtract(origin).Normalized();\n\n        this.illuminationRay = new IlluminationRay(origin, pointToLight);\n        this.illuminationRay.parentRay = this;\n    }\n}\n","import { Scene } from \"./scene\";\nimport { Color } from \"./color\";\nimport { AbstractRay } from \"./abstractray\";\nimport { IIntersectable } from \"./iintersectable\";\n\nexport class IlluminationRay extends AbstractRay {\n\n    public Shoot(scene: Scene, /*excludeObject: IIntersectable*/): Color {\n        for (let i = 0; i < scene.Objects().length; i++) {\n            const object = scene.Objects()[i];\n            // if (object == excludeObject) break;\n\n            const hitInfo = object.intersect(this);\n            if (hitInfo.hit) {\n                this.AddHit(hitInfo);\n                return new Color(0, 0, 0);\n            }\n        }\n        const intensity = Math.max(0, this.direction.Dot(this.parentRay.GetNearerHit().normal));\n        return new Color(intensity, intensity, intensity);\n    }\n}\n","import { Color } from \"./color\"\nimport { Vec3 } from \"./vec3\"\nimport { IIntersectable } from \"./iintersectable\"\nimport { Sphere } from \"./sphere\"\nimport { Light } from \"./light\"\n\nexport class Scene {\n    private light: Light\n\n    private objects: Array<IIntersectable>\n\n    constructor() {\n        this.objects = new Array();\n\n        this.light = new Light(new Vec3(1000, 500, 3))\n\n        this.objects.push(new Sphere(new Vec3(.9, 0.5, 2.4), 0.1, Color.Yellow()));\n        this.objects.push(new Sphere(new Vec3(0, 0, 3), 1, Color.Red()));\n    }\n\n    Objects(): Array<IIntersectable> {\n        return this.objects;\n    }\n\n    Light(): Light {\n        return this.light;\n    }\n}\n","import { IIntersectable } from './iintersectable'\n\nimport { Vec3 } from './vec3'\nimport { AbstractRay } from './abstractray'\nimport { HitInfo } from './hitinfo'\nimport { Color } from './color'\n\nexport class Sphere implements IIntersectable {\n    origin: Vec3\n    radius: number\n    color: Color\n\n    constructor(origin: Vec3, radius: number, color: Color) {\n        this.origin = origin;\n        this.radius = radius;\n        this.color = color;\n    }\n\n    /**\n     * Ray-Sphere Intersection (using the Algebraic Solution)\n     */\n    intersect(ray: AbstractRay): HitInfo {\n        //Ray: r_o + r_d * t\n        let x_o = ray.origin.x;\n        let y_o = ray.origin.y;\n        let z_o = ray.origin.z;\n        let x_d = ray.direction.x;\n        let y_d = ray.direction.y;\n        let z_d = ray.direction.z;\n\n        // Sphere: (x_s - x_c)^2 + (y_s - y_c)^2 + (z_s - z_c)^2 = r^2\n        let x_c = this.origin.x;\n        let y_c = this.origin.y;\n        let z_c = this.origin.z;\n        let r   = this.radius;\n\n        // (x_o + x_d * t - x_c)^2 + (y_o + y_d * t - y_c)^2 + (z_o + z_d * t - z_c)^2 = r^2\n        //\n        // solve for t\n        // A * t^2 + B * t + C (quadratic equation)\n        // where\n        // A = x_d^2 + y_d^2 + z_d^2\n        // B = 2 * (x_d * (x_o - x_c)+ y_d * (y_o - y_c) + z_d * (z_o - z_c))\n        // C = (x_o - x_c)^2 + (y_o - y_c)^2 + (z_o - z_c)^2 - r^2\n        let A = x_d ** 2 + y_d ** 2 + z_d ** 2\n        let B = 2 * (x_d * (x_o - x_c)+ y_d * (y_o - y_c) + z_d * (z_o - z_c));\n        let C = (x_o - x_c) ** 2 + (y_o - y_c) ** 2 + (z_o - z_c) ** 2 - r ** 2\n\n        // if the quadratic equation discriminant (B^2 - 4AC)\n        //  > 0 then intersect in two points\n        //  = 0 then intersect in one point\n        //  < 0 then there is no intersection\n        let discriminant = B ** 2 - 4 * A * C;\n\n        if (discriminant >= 0) {\n            // Use the quadratic formula to find t\n            let t_0 = ( -B - Math.sqrt(discriminant) ) / 2 * A;\n\n            // Remember: if t < 0 then the intersection is behind the ray's origin\n            if (t_0 < 0) return new HitInfo(false, -Math.E, null, null, null); //TODO: this is ugly, e usage is random and meaningless here\n\n            //Use t to find intersection point\n            let x_i = x_o + x_d * t_0;\n            let y_i = y_o + y_d * t_0;\n            let z_i = z_o + z_d * t_0;\n\n            let hitPoint: Vec3 = new Vec3(x_i, y_i, z_i);\n            let normal: Vec3 = new Vec3((x_i - x_c)/r, (y_i - y_c)/r, (z_i - z_c)/r);\n\n            return new HitInfo(true, t_0, hitPoint, normal, new Color(this.color.r, this.color.g, this.color.b));\n        } else {\n            return new HitInfo(false, -Math.E, null, null, null); //TODO: this is ugly part 2, e usage is random and meaningless here\n        }\n    }\n}\n","import { Vec3 } from \"./vec3\";\nimport { Color } from \"./color\";\nimport { Consts } from \"./consts\";\n\nexport class HitInfo {\n   hit: boolean\n   t: number\n   hitPoint: Vec3 //TODO: terrible name\n   normal: Vec3\n   color: Color\n\n   constructor(hit: boolean, t: number, hitPoint: Vec3, normal: Vec3, color: Color) {\n        this.hit = hit;\n        this.t = t;\n        this.hitPoint = hitPoint;\n        this.normal = normal; //TODO: look into Typescript optional types\n        this.color = color;\n    }\n\n    public HitPoint(): Vec3 {\n        return new Vec3(\n            this.hitPoint.x,\n            this.hitPoint.y,\n            this.hitPoint.z\n        );\n    }\n\n    public GetColor() {\n        if (Consts.DEBUG_NORMALS) {\n            return new Color(\n                this.normal.x * 255,\n                this.normal.y * 255,\n                this.normal.z * 255 * -1,\n            );\n        } else {\n            return new Color(\n                this.color.r,\n                this.color.g,\n                this.color.b\n            );\n        }\n    }\n}\n","import { Vec3 } from \"./vec3\";\n\nexport class Light {\n    public position: Vec3\n\n    constructor(position: Vec3) {\n        this.position = position;\n    }\n}\n","export class UI {\n    private div: HTMLDivElement;\n    private canvas: HTMLCanvasElement;\n    private context: CanvasRenderingContext2D\n    private clearButton: HTMLButtonElement;\n    private fillRandomButton: HTMLButtonElement;\n    private renderButton: HTMLButtonElement;\n    private saveToPNGButton: HTMLButtonElement;\n\n    constructor(width: number, height: number) {\n        this.div = document.createElement('div');\n        document.body.append(this.div)\n\n        this.canvas = document.createElement('canvas');\n        this.div.appendChild(this.canvas);\n\n        this.context = this.canvas.getContext('2d');\n        this.canvas.width = width;\n        this.canvas.height = height;\n\n        this.clearButton = document.createElement('button');\n        this.clearButton.innerText = 'Clear';\n        this.div.appendChild(this.clearButton);\n\n        this.fillRandomButton = document.createElement('button');\n        this.fillRandomButton.innerText = 'fillRandom';\n        this.div.appendChild(this.fillRandomButton);\n\n        this.renderButton = document.createElement('button');\n        this.renderButton.innerText = 'render';\n        this.div.appendChild(this.renderButton);\n\n        this.saveToPNGButton = document.createElement('button');\n        this.saveToPNGButton.innerText = 'saveToPNG';\n        this.div.appendChild(this.saveToPNGButton);\n    }\n\n    SetClearButtonOnClick(fn:() => void) {\n        this.clearButton.onclick = fn;\n    }\n\n    SetFillRandomButtonOnClick(fn:() => void) {\n        this.fillRandomButton.onclick = fn;\n    }\n\n    SetRenderButtonOnClick(fn:() => void) {\n        this.renderButton.onclick = fn;\n    }\n\n    SetSaveToPNGButtonOnClick(fn:() => void) {\n        this.saveToPNGButton.onclick = fn;\n    }\n\n    DrawCanvas(buffer: Uint8ClampedArray) {\n        this.context.putImageData(new ImageData(buffer, this.canvas.width, this.canvas.height), 0, 0);\n    }\n\n    SaveToPNG() {\n        var newTab = window.open();\n        newTab.document.body.innerHTML = '<img src=\"' + this.canvas.toDataURL() + '\">';\n    }\n}\n","import { UI } from \"./ui\";\nimport { Raytracer } from \"./raytracer\";\n\nexport class Controller {\n    private ui: UI;\n    private raytracer: Raytracer;\n\n    constructor(ui: UI, raytracer: Raytracer) {\n        this.ui = ui;\n        this.raytracer = raytracer;\n\n        ui.SetClearButtonOnClick(()=>this.Clear());\n        ui.SetFillRandomButtonOnClick(()=>this.FillRandom());\n        ui.SetRenderButtonOnClick(()=>this.Render());\n        ui.SetSaveToPNGButtonOnClick(()=>this.SaveToPNG());\n    }\n\n    Clear() {\n        this.raytracer.Clear();\n        this.ui.DrawCanvas(this.raytracer.GetBuffer());\n    }\n\n    FillRandom() {\n        this.raytracer.FillRandom();\n        this.ui.DrawCanvas(this.raytracer.GetBuffer());\n    }\n\n    Render() {\n        this.raytracer.Render();\n        this.ui.DrawCanvas(this.raytracer.GetBuffer());\n    }\n\n    SaveToPNG() {\n        this.ui.SaveToPNG();\n    }\n}\n"],"sourceRoot":""}