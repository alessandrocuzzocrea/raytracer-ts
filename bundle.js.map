{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/color.ts","webpack:///./src/vec3.ts","webpack:///./src/consts.ts","webpack:///./src/main.ts","webpack:///./src/raytracer.ts","webpack:///./src/viewport.ts","webpack:///./src/ray.ts","webpack:///./src/scene.ts","webpack:///./src/sphere.ts","webpack:///./src/hitinfo.ts","webpack:///./src/light.ts","webpack:///./src/ui.ts","webpack:///./src/controller.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","g","b","this","Red","Color","Black","Magenta","White","x","y","z","Zero","Vec3","Length","a","Math","pow","sqrt","Normalized","length","Add","v","Subtract","ScalarMultiply","k","Dot","WIDTH","HEIGHT","DEBUG_NORMALS","Consts","ui","UI","raytracer","Raytracer","controller","Controller","Clear","Render","width","height","viewport","Viewport","scene","Scene","FillRandom","Height","ray","GetRay","Objects","forEach","hitInfo","intersect","hit","pointToLight","Light","position","hitPoint","intensity","max","normal","hitInfoColor","GetColor","DrawPixel","Width","GetBuffer","buffer","Uint8ClampedArray","Ratio","clearColor","random","dirX","dirY","Ray","color","offset","origin","direction","CalcPointAtT","objects","Array","light","push","Sphere","radius","x_o","y_o","z_o","x_d","y_d","z_d","x_c","y_c","z_c","A","B","C","discriminant","t_0","x_i","y_i","z_i","HitInfo","div","document","createElement","body","append","canvas","appendChild","context","getContext","clearButton","innerText","fillRandomButton","renderButton","saveToPNGButton","SetClearButtonOnClick","fn","onclick","SetFillRandomButtonOnClick","SetRenderButtonOnClick","SetSaveToPNGButtonOnClick","DrawCanvas","putImageData","ImageData","SaveToPNG","window","open","innerHTML","toDataURL"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","export class Color {\n    r: number;\n    g: number;\n    b: number;\n\n    constructor(r:number, g:number, b:number) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n    }\n\n    public static Red(): Color {\n        return new Color(231, 76, 60);\n    }\n\n    public static Black(): Color {\n        return new Color(44, 62, 80);\n    }\n\n    public static Magenta(): Color {\n        return new Color(155, 89, 182);\n    }\n\n    public static White(): Color {\n        return new Color(255, 255, 255);\n    }\n}\n","export class Vec3 {\n    x: number;\n    y: number;\n    z: number;\n\n    constructor(x: number, y: number, z:number) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    public static Zero(): Vec3 {\n        return new Vec3(0, 0, 0);\n    }\n\n    public Length(): number {\n        let a = Math.pow(this.x, 2);\n        let b = Math.pow(this.y, 2);\n        let c = Math.pow(this.z, 2);\n        return Math.sqrt(a + b + c);\n    }\n\n    public Normalized(): Vec3 {\n        let length = this.Length();\n        return new Vec3(\n            this.x / length,\n            this.y / length,\n            this.z / length\n        );\n    }\n\n    public Add(v: Vec3): Vec3 {\n        return new Vec3(\n            this.x + v.x,\n            this.y + v.y,\n            this.z + v.z\n        );\n    }\n\n    public Subtract(v: Vec3): Vec3 {\n        return new Vec3(\n            this.x - v.x,\n            this.y - v.y,\n            this.z - v.z\n        );\n    }\n\n    public ScalarMultiply(k: number): Vec3 {\n        return new Vec3(\n            this.x * k,\n            this.y * k,\n            this.z * k,\n        );\n    }\n\n    public Dot(v: Vec3): number {\n        return this.x * v.x + this.y * v.y + this.z * v.z;\n    }\n}\n","export class Consts {\n    public static readonly WIDTH         = 640;\n    public static readonly HEIGHT        = 480;\n    public static readonly DEBUG_NORMALS = false;\n}\n","import { Consts } from './consts';\nimport { Raytracer } from './raytracer';\nimport { UI } from './ui';\nimport { Controller } from './controller';\n\nlet ui = new UI(Consts.WIDTH, Consts.HEIGHT);\nlet raytracer = new Raytracer(Consts.WIDTH, Consts.HEIGHT);\nlet controller = new Controller(ui, raytracer);\n\ncontroller.Clear();\ncontroller.Render();\n","import { Viewport } from './viewport'\nimport { Scene } from './scene';\nimport { Ray } from './ray';\nimport { HitInfo } from './hitinfo';\nimport { Color } from './color';\n\nexport class Raytracer {\n    private viewport: Viewport;\n    private scene: Scene;\n\n    constructor(width: number, height: number) {\n        this.viewport = new Viewport(width, height);\n        this.scene = new Scene();\n    }\n\n    Clear() {\n        this.viewport.Clear();\n    }\n\n    FillRandom() {\n        this.viewport.FillRandom();\n    }\n\n    Render() {\n        // this.viewport.Render(this.scene);\n        //TODO: the resulting image needs to be vertically flipped\n        for (var y: number = 0; y < this.viewport.Height(); y++) {\n            for (var x: number = 0; x < this.viewport.Width(); x++) {\n                let ray: Ray = this.viewport.GetRay(x, y);\n\n                this.scene.Objects().forEach(object => {\n                    let hitInfo: HitInfo = object.intersect(ray);\n\n                    if (hitInfo.hit) {\n                        let pointToLight = this.scene.Light().position.Subtract(hitInfo.hitPoint).Normalized();\n\n                        let intensity = Math.max(0, pointToLight.Dot(hitInfo.normal));\n\n                        let hitInfoColor: Color = hitInfo.GetColor();\n\n                        this.viewport.DrawPixel(x, y, new Color(hitInfoColor.r * intensity, hitInfoColor.g * intensity, hitInfoColor.b * intensity));\n                    }\n                });\n            }\n        }\n    }\n\n    GetBuffer(): Uint8ClampedArray {\n        return this.viewport.GetBuffer();\n    }\n}\n","import { Ray } from \"./ray\";\nimport { Vec3 } from \"./vec3\";\nimport { Color } from \"./color\";\n\nexport class Viewport {\n    private width: number\n    private height: number\n    private buffer: Uint8ClampedArray\n\n    constructor(width: number, height: number) {\n        this.width = width;\n        this.height = height;\n        this.buffer = new Uint8ClampedArray(width * height * 4);\n\n        this.Clear();\n    }\n\n    GetBuffer() {\n        return this.buffer;\n    }\n\n    Width(): number {\n        return this.width;\n    }\n\n    Height(): number {\n        return this.height;\n    }\n\n    Ratio(): number {\n        return this.width / this.height;\n    }\n\n    Clear() {\n        let clearColor = Color.Magenta();\n        for(var i = 0; i < this.width * this.height * 4;) {\n            this.buffer[i+0] = clearColor.r;\n            this.buffer[i+1] = clearColor.g;\n            this.buffer[i+2] = clearColor.b;\n            this.buffer[i+3] = 255;\n            i += 4;\n        }\n    }\n\n    FillRandom() {\n        for(var i = 0; i < this.width * this.height * 4;) {\n            this.buffer[i+0] = Math.random() * 255;\n            this.buffer[i+1] = Math.random() * 255;\n            this.buffer[i+2] = Math.random() * 255;\n            this.buffer[i+3] = 255;\n            i += 4;\n        }\n    }\n\n    GetRay(x: number, y: number): Ray {\n        //TODO: cast the ray from the center for the pixel\n        let dirX: number = (this.Ratio() / this.width) * x - this.Ratio()/2;\n        let dirY: number = (1 / this.height) * y - 1/2;\n        return new Ray(new Vec3(0,0,0), new Vec3(dirX, dirY, 1));\n    }\n\n    DrawPixel(x: number, y: number, color: Color) {\n        let offset = this.width * y + x;\n        this.buffer[offset * 4 + 0] = color.r;\n        this.buffer[offset * 4 + 1] = color.g;\n        this.buffer[offset * 4 + 2] = color.b;\n        this.buffer[offset * 4 + 3] = 255;\n    }\n}\n","import { Vec3 } from \"./vec3\";\n\nexport class Ray {\n    origin : Vec3;\n    direction : Vec3;\n\n    constructor(origin: Vec3, direction: Vec3) {\n        this.origin = origin;\n        this.direction = direction.Normalized();\n    }\n\n    public CalcPointAtT(t: number): Vec3 {\n        return this.origin.Add(this.direction.ScalarMultiply(t));\n    }\n}\n","import { Color } from \"./color\"\nimport { Vec3 } from \"./vec3\"\nimport { Primitive } from \"./primitive\"\nimport { Sphere } from \"./sphere\"\nimport { Light } from \"./light\"\n\nexport class Scene {\n    private light: Light\n\n    private objects: Array<Primitive>\n\n    constructor() {\n        this.objects = new Array();\n\n        this.light = new Light(new Vec3(1000, 0, 3))\n\n        this.objects.push(new Sphere(new Vec3(0, 0, 3), 1, Color.Red()));\n    }\n\n    Objects(): Array<Primitive> {\n        return this.objects;\n    }\n\n    Light(): Light {\n        return this.light;\n    }\n}\n","import { Primitive } from './primitive'\n\nimport { Vec3 } from './vec3'\nimport { Ray } from './ray'\nimport { HitInfo } from './hitinfo'\nimport { Color } from './color'\n\nexport class Sphere implements Primitive {\n    origin: Vec3\n    radius: number\n    color: Color\n\n    constructor(origin: Vec3, radius: number, color: Color) {\n        this.origin = origin;\n        this.radius = radius;\n        this.color = color;\n    }\n\n    /**\n     * Ray-Sphere Intersection (using the Algebraic Solution)\n     */\n    intersect(ray: Ray): HitInfo {\n        //Ray: r_o + r_d * t\n        let x_o = ray.origin.x;\n        let y_o = ray.origin.y;\n        let z_o = ray.origin.z;\n        let x_d = ray.direction.x;\n        let y_d = ray.direction.y;\n        let z_d = ray.direction.z;\n\n        // Sphere: (x_s - x_c)^2 + (y_s - y_c)^2 + (z_s - z_c)^2 = r^2\n        let x_c = this.origin.x;\n        let y_c = this.origin.y;\n        let z_c = this.origin.z;\n        let r   = this.radius;\n\n        // (x_o + x_d * t - x_c)^2 + (y_o + y_d * t - y_c)^2 + (z_o + z_d * t - z_c)^2 = r^2\n        //\n        // solve for t\n        // A * t^2 + B * t + C (quadratic equation)\n        // where\n        // A = x_d^2 + y_d^2 + z_d^2\n        // B = 2 * (x_d * (x_o - x_c)+ y_d * (y_o - y_c) + z_d * (z_o - z_c))\n        // C = (x_o - x_c)^2 + (y_o - y_c)^2 + (z_o - z_c)^2 - r^2\n        let A = x_d ** 2 + y_d ** 2 + z_d ** 2\n        let B = 2 * (x_d * (x_o - x_c)+ y_d * (y_o - y_c) + z_d * (z_o - z_c));\n        let C = (x_o - x_c) ** 2 + (y_o - y_c) ** 2 + (z_o - z_c) ** 2 - r ** 2\n\n        // if the quadratic equation discriminant (B^2 - 4AC)\n        //  > 0 then intersect in two points\n        //  = 0 then intersect in one point\n        //  < 0 then there is no intersection\n        let discriminant = B ** 2 - 4 * A * C;\n\n        if (discriminant >= 0) {\n            // Use the quadratic formula to find t\n            let t_0 = ( -B - Math.sqrt(discriminant) ) / 2 * A;\n\n            //Use t to find intersection point\n            let x_i = x_o + x_d * t_0;\n            let y_i = y_o + y_d * t_0;\n            let z_i = z_o + z_d * t_0;\n\n            let hitPoint: Vec3 = new Vec3(x_i, y_i, z_i);\n            let normal: Vec3 = new Vec3((x_i - x_c)/r, (y_i - y_c)/r, (z_i - z_c)/r);\n\n            return new HitInfo(true, hitPoint, normal, new Color(this.color.r, this.color.g, this.color.b));\n        } else {\n            return new HitInfo(false, null, null, null);\n        }\n    }\n}\n","import { Vec3 } from \"./vec3\";\nimport { Color } from \"./color\";\nimport { Consts } from \"./consts\";\n\nexport class HitInfo {\n   hit: boolean\n   hitPoint: Vec3\n   normal: Vec3\n   color: Color\n\n   constructor(hit: boolean, hitPoint: Vec3, normal: Vec3, color: Color) {\n        this.hit = hit;\n        this.hitPoint = hitPoint;\n        this.normal = normal; //TODO: look into Typescript optional types\n        this.color = color;\n    }\n\n    public GetColor() {\n        if (Consts.DEBUG_NORMALS) {\n            return new Color(\n                this.normal.x * 255,\n                this.normal.y * 255,\n                this.normal.z * 255 * -1,\n            );\n        } else {\n            return new Color(\n                this.color.r,\n                this.color.g,\n                this.color.b\n            );\n        }\n    }\n}\n","import { Vec3 } from \"./vec3\";\n\nexport class Light {\n    public position: Vec3\n\n    constructor(position: Vec3) {\n        this.position = position;\n    }\n}\n","export class UI {\n    private div: HTMLDivElement;\n    private canvas: HTMLCanvasElement;\n    private context: CanvasRenderingContext2D\n    private clearButton: HTMLButtonElement;\n    private fillRandomButton: HTMLButtonElement;\n    private renderButton: HTMLButtonElement;\n    private saveToPNGButton: HTMLButtonElement;\n\n    constructor(width: number, height: number) {\n        this.div = document.createElement('div');\n        document.body.append(this.div)\n\n        this.canvas = document.createElement('canvas');\n        this.div.appendChild(this.canvas);\n\n        this.context = this.canvas.getContext('2d');\n        this.canvas.width = width;\n        this.canvas.height = height;\n\n        this.clearButton = document.createElement('button');\n        this.clearButton.innerText = 'Clear';\n        this.div.appendChild(this.clearButton);\n\n        this.fillRandomButton = document.createElement('button');\n        this.fillRandomButton.innerText = 'fillRandom';\n        this.div.appendChild(this.fillRandomButton);\n\n        this.renderButton = document.createElement('button');\n        this.renderButton.innerText = 'render';\n        this.div.appendChild(this.renderButton);\n\n        this.saveToPNGButton = document.createElement('button');\n        this.saveToPNGButton.innerText = 'saveToPNG';\n        this.div.appendChild(this.saveToPNGButton);\n    }\n\n    SetClearButtonOnClick(fn:() => void) {\n        this.clearButton.onclick = fn;\n    }\n\n    SetFillRandomButtonOnClick(fn:() => void) {\n        this.fillRandomButton.onclick = fn;\n    }\n\n    SetRenderButtonOnClick(fn:() => void) {\n        this.renderButton.onclick = fn;\n    }\n\n    SetSaveToPNGButtonOnClick(fn:() => void) {\n        this.saveToPNGButton.onclick = fn;\n    }\n\n    DrawCanvas(buffer: Uint8ClampedArray) {\n        this.context.putImageData(new ImageData(buffer, this.canvas.width, this.canvas.height), 0, 0);\n    }\n\n    SaveToPNG() {\n        var newTab = window.open();\n        newTab.document.body.innerHTML = '<img src=\"' + this.canvas.toDataURL() + '\">';\n    }\n}\n","import { UI } from \"./ui\";\nimport { Raytracer } from \"./raytracer\";\n\nexport class Controller {\n    private ui: UI;\n    private raytracer: Raytracer;\n\n    constructor(ui: UI, raytracer: Raytracer) {\n        this.ui = ui;\n        this.raytracer = raytracer;\n\n        ui.SetClearButtonOnClick(()=>this.Clear());\n        ui.SetFillRandomButtonOnClick(()=>this.FillRandom());\n        ui.SetRenderButtonOnClick(()=>this.Render());\n        ui.SetSaveToPNGButtonOnClick(()=>this.SaveToPNG());\n    }\n\n    Clear() {\n        this.raytracer.Clear();\n        this.ui.DrawCanvas(this.raytracer.GetBuffer());\n    }\n\n    FillRandom() {\n        this.raytracer.FillRandom();\n        this.ui.DrawCanvas(this.raytracer.GetBuffer());\n    }\n\n    Render() {\n        this.raytracer.Render();\n        this.ui.DrawCanvas(this.raytracer.GetBuffer());\n    }\n\n    SaveToPNG() {\n        this.ui.SaveToPNG();\n    }\n}\n"],"sourceRoot":""}